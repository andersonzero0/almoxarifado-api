// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  ADMIN
  ALMOXARIFE
  REQUISITANTE
}

model Usuario {
  id        String   @id @unique @default(cuid())
  name      String
  username  String   @unique
  password  String
  role      Roles
  createdAt DateTime @default(now())

  fornecedores           Fornecedor[]
  createdRequisitions    Requisicao[]       @relation("CreatorRelation")
  authorizedRequisitions Requisicao[]       @relation("AuthorizerRelation")
  produtos               Produto[]
  historicosProduto      HistoricoProduto[]

  @@map("usuarios_tb")
}

model Fornecedor {
  id              String   @id @unique @default(cuid())
  name            String
  tax_id          String?
  phone           String?
  email           String?
  address         String?
  cep             String?
  city            String?
  corporateReason String?
  agent           String?
  bank            String?
  agency          String?
  account         String?
  createdAt       DateTime @default(now())

  produtos Produto[]

  creator   Usuario @relation(fields: [creatorId], references: [id])
  creatorId String

  @@map("fornecedores_tb")
}

model Produto {
  id          String  @id @unique @default(cuid())
  name        String
  image_url   String?
  description String?
  quantity    Int     @default(0)
  priceUnit   Int     @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  fornecedor   Fornecedor @relation(fields: [fornecedorId], references: [id])
  fornecedorId String

  creator   Usuario @relation(fields: [creatorId], references: [id])
  creatorId String

  historicoProduto HistoricoProduto[]
  requisicoes      Requisicao[]

  @@map("produtos_tb")
}

enum ActionHistorico {
  ADDED
  REMOVED
}

model HistoricoProduto {
  id             String          @id @unique @default(cuid())
  action         ActionHistorico
  quantityUpdate Int
  description    String
  createdAt      DateTime        @default(now())

  produto   Produto @relation(fields: [produtoId], references: [id])
  produtoId String

  creator   Usuario @relation(fields: [creatorId], references: [id])
  creatorId String
}

enum StatusRequisicao {
  PENDENTE
  APROVADO
  NEGADO
}

model Requisicao {
  id          String           @id @unique @default(cuid())
  quantity    Int
  status      StatusRequisicao @default(PENDENTE)
  description String
  createdAt   DateTime         @default(now())

  creator   Usuario @relation("CreatorRelation", fields: [creatorId], references: [id])
  creatorId String

  authorizer   Usuario? @relation("AuthorizerRelation", fields: [authorizerId], references: [id])
  authorizerId String?

  produto   Produto @relation(fields: [produtoId], references: [id])
  produtoId String
}
