// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Almoxarife {
  id String @id @unique @default(cuid())
  name String
  username String @unique
  password String
  createdAt DateTime @default(now())

  fornecedores Fornecedor[]
  produtos Produto[]
  historicosProduto HistoricoProduto[]

  @@map("almoxarifes_tb")
}

model Requisitante {
  id String @id @unique @default(cuid())
  name String
  username String @unique
  password String
  createdAt DateTime @default(now())

  requisicoes Requisicao[]

  @@map("requisitantes_tb")
}

model Fornecedor {
  id String @id @unique @default(cuid())
  name String
  tax_id String?
  phone String?
  email String?
  address String?
  cep String?
  city String?
  corporateReason String?
  agent String?
  bank String?
  agency String?
  account String?
  createdAt DateTime @default(now())

  produtos Produto[]

  almoxarife Almoxarife @relation(fields: [almoxarifeId], references: [id])
  almoxarifeId String

  @@map("fornecedores_tb")
}

model Produto {
  id String @id @unique @default(cuid())
  name String
  image_url String?
  description String?
  quantity Int @default(0)
  priceUnit Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  fornecedor Fornecedor @relation(fields: [fornecedorId], references: [id])
  fornecedorId String

  almoxarife Almoxarife @relation(fields: [almoxarifeId], references: [id])
  almoxarifeId String

  historicoProduto HistoricoProduto[]
  requisicoes Requisicao[]

  @@map("produtos_tb")
}

enum ActionHistorico {
  ADDED
  REMOVED
}

model HistoricoProduto {
  id String @id @unique @default(cuid())
  action ActionHistorico
  quantityUpdate Int
  description String
  createdAt DateTime @default(now())
  
  produto Produto @relation(fields: [produtoId], references: [id])
  produtoId String

  almoxarife Almoxarife @relation(fields: [almoxarifeId], references: [id])
  almoxarifeId String
}

enum StatusRequisicao {
  PENDENTE
  APROVADO
  NEGADO
}

model Requisicao {
  id String @id @unique @default(cuid())
  quantity Int
  status StatusRequisicao @default(PENDENTE) 
  description String
  createdAt DateTime @default(now())

  requisitante Requisitante @relation(fields: [requisitanteId], references: [id])
  requisitanteId String

  produto Produto @relation(fields: [produtoId], references: [id])
  produtoId String
}